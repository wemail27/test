[{"owner":"Admin","code":"$ apt update \n$ apt upgrade  \n$ apt install python  \n$ pip install wordlist","use":"$ wordlist -h [to see all options] \n$ wordlist -m 4 -M 6 -o wordlist.txt 12345678 \n-m \u003d minimum length, \n-M \u003d maximum length, \nwordlist.txt is output file, \n12345678 \u003d here you can provide your own alphabets. \n\nNow open this file type this command : $ cat wordlist.txt","name":"Wordlist Generator","link":"https://github.com","disc":"Generate wordlist using Python.","category":"Extra"},{"owner":"UndeadSec","code":"$ apt update \n$ apt upgrade \n$ apt install git \n$ apt install python \n$ apt install python2 \n$ git clone https://github.com/UndeadSec/GoblinWordGenerator","use":"RUN: \ncd GoblinWordGenerator \n$ chmod +x * \n$ python3 goblin.py \n\n• To generate wordlist of length 4 to 6, type 4:6 {hit enter}. \n• Change name to your wordlist file like this: pass.txt {hit enter} and then select your choice and {hit enter}, it will generate a pass.txt. \n• To open this file type this command: \n$ cat pass.txt","name":"GoblinWordGenerator","link":"https://github.com/UndeadSec/GoblinWordGenerator","disc":"Python wordlist generator. This can be used to generate random password.","category":"Extra"},{"owner":"evait-security","code":"$ apt update \n$ apt upgrade \n$ apt install git \n$ apt install python2 \n$ git clone https://github.com/evait-security/weeman","use":"$ cd weeman \n$ chmod +x * \n$ python2 weeman.py \n$ set url http://website.com \n$ set action_url http://target.com \n$ run","name":"WEEMAN","link":"https://github.com/evait-security/weeman","disc":"HTTP server for phishing in python.","category":"Phishing"},{"owner":"Admin","code":"$ apt update \u0026\u0026 apt upgrade \n$ apt install python \n$ pip install speedtest-cli","use":" speedtest \n\nTo show all options use this command: \n$ speedtest -h ","name":"Speed Test","link":"www.github.com","disc":"This is used to find your download and upload speed of your internet connection.","category":"Extra"},{"owner":"ihebski","code":"$ apt update \u0026\u0026 apt upgrade\n$ apt install git\n$ apt install python2\n$ git clone https://github.com/ihebski/angryFuzzer.git\n$ cd angryFuzzer\n$ sudo pip install -r requirements.txt\n$ pip2 install requests\n$ chmod +x *\n$ python angryFuzzer.py","use":"$ python angryFuzzer.py -h\nusage: angryFuzzer.py [options]\n\noptions:\n  -h, --help show this help message and exit\n  -q, --quiet Silent mode ,only reports\n  -u URL, --url\u003dURL URL of the Target\n  -c CMS, --cms\u003dCMS scan CMS \u003d\u003d\u003e wp ,dp\n  -w WORDLIST, --wordlist\u003dWORDLIST Custom wordlist\n\nExample:\n• Fuzzing an url with default dictionary\npython angryFuzzer.py -u http://127.0.0.1\n• Fuzzing CMS (wp: in this example !)\npython angryFuzzer.py -u http://127.0.0.1 --cms wp\n• Fuzzing a custom Wordlist\npython angryFuzzer.py -u http://127.0.0.1 -w fuzzdb/discovery/predictable-filepaths/php/PHP.txt","name":"AngryFuzz3r","link":"https://github.com/ihebski/angryFuzzer#urlfuzz3r-angryfuzz3r_1","disc":"AngryFuzz3r is a collection of tools for pentesting to gather information and discover vulnerabilities of the targets based on Fuzzedb\n\nFEATURES:\n• Fuzz url set from an input file\n• Concurrent relative path search\n• Configurable number of fuzzing workers\n• Fuzz CMS \u003d\u003d\u003e Wordpress, Durpal, Joomla\n• Generate reports of the valid paths","category":"Vulnerability"},{"owner":"hahwul","code":"• Download(clone) \u0026 Unpack A2SV\n$ git clone https://github.com/hahwul/a2sv.git\n$ cd a2sv\n\n• Install Python Package / OpenSSL\n$ pip install argparse\n$ pip install netaddr\n$ apt-get install openssl\n\n• Run A2SV\n$ python a2sv.py -h","use":"usage: a2sv [-h] [-t TARGET] [-tf TARGETFILE] [-p PORT] [-m MODULE] [-d DISPLAY] [-u] [-v]\n\nINSTALL SSL Vulnerability:\n\n python a2sv.py -t 127.0.0.1\n$ python a2sv.py -t 127.0.0.1 -m heartbleed\n$ python a2sv.py -t 127.0.0.1 -d n\n$ python a2sv.py -t 127.0.0.1 -p 8111\n$ python a2sv.py -tf target_list.txt","name":"A2SV","link":"https://github.com/hahwul/a2sv","disc":"A2SV stands for Auto Scanning to SSL Vulnerability. A2SV performs vulnerability scanning for CCS injection, Heartbleed, Logjam, Freak Attack, Anonymous Cipher, SSL v3 POODLE, SSL v2 Drown, and Crime (SPDY).","category":"Vulnerability"},{"owner":"AndroBugs","code":"$ apt update\n$ apt upgrade\n$ apt install git\n$ apt install python2\n$ git clone https://github.com/AndroBugs/AndroBugs_Framework.git\n$ cd AndroBugs_Framework\n$ chmod +x *","use":"First move your apk to AndroBugs_Framework folder by using this command:\nmv app.apk /$HOME/AndroBugs_Framework/\n\nNow run this command:\npython2 androbugs.py -f app.apk -o result.txt\n\napp.apk is your apk name, result.txt will store all information. This will shows all bugs and vulnerabilities of your app.\n*This is for Educational purpose only, I am not responsible for what you do.","name":"AndroBugs Framework","link":"https://github.com/AndroBugs/AndroBugs_Framework","disc":"AndroBugs Framework is an Android vulnerability analysis system that helps developers or hackers find potential security vulnerabilities in Android applications. No splendid GUI interface, but the most efficient (less than 2 minutes per scan in average) and more accurate.\n\nFeature : \n• Find security vulnerabilities in an Android app\n• Check if the code is missing best practices\n• Check dangerous shell commands (e.g. “su”)\n• Collect Information from millions of apps\n• Check the app’s security protection (marked as , designed for app repackaging hacking)","category":"Vulnerability"},{"owner":"s0md3v","code":"$ apt update \u0026\u0026 apt upgrade \n$ apt install git \n$ apt install python2 \n$ apt install python \n$ git clone https://github.com/s0md3v/Breacher.git \n$ cd Breacher","use":"Run: \n$ python2 breacher.py \n\nUsage: \n• Check all paths with php extension: \npython breacher -u example.com --type php \n• Check all paths with php extension with threads: \npython breacher -u example.com --type php --fast \n• Check all paths without threads: \npython breacher -u example.com \n• Adding a custom path. For example if you want all paths to start with /data (example.com/data/...) you can do this: \npython breacher -u example.com --path /data \n\nNote: When you specify an extension using --type option, Breacher includes paths of that extension as well as paths with no extensions like /admin/login","name":"Breacher","link":"https://github.com/s0md3v/Breacher","disc":"A script to find admin login pages and EAR vulnerabilites. \n\nFEATURES: \n• Multi-threading on demand \n• Big path list (482 paths) \n• Supports php, asp and html extensions \n• Checks for potential EAR vulnerabilities \n• Checks for robots.txt \n• Support for custom patns","category":"Vulnerability"},{"owner":"Screetsec","code":"$ apt update \u0026\u0026 apt upgrade \n$ apt install git \n$ git clone https://github.com/Screetsec/Brutal.git \n$ cd Brutal \n$ chmod +x * ","use":"Run: \nsudo ./Brutal.sh \nor \nsudo su ./Brutal.sh","name":"Brutal","link":"https://github.com/Screetsec/Brutal","disc":"Brutal is a toolkit to quickly create various payload, powershell attack, virus attack.and launch listener for a human interface devices. This is extremely useful for executing scripts on a target machine. For using this tool you must install sudo in your termux that means this will work only on rooted devices.","category":"Exploitation"},{"owner":"x90skysn3k","code":"$ apt update \n$ apt upgrade \n$ apt install git \n$ apt install python2 \n$ git clone https://github.com/x90skysn3k/brutespray.git \n$ cd brutespray \n$ pip2 install -r requirements.txt ","use":"Run: \n$ python2 brutespray.py \n\nFirst do an nmap scan with \n-oG nmap.gnmap or -oX nmap.xml \n$ python2 brutespray.py -h \n$ python brutespray.py --file nmap.gnmap \n$ python brutesrpay.py --file nmap.xml \n$ python brutespray.py --file nmap.xml -i","name":"BruteSpray","link":"https://github.com/x90skysn3k/brutespray","disc":"BruteSpray takes nmap GNMAP/XML output and automatically brute-forces services with default credentials using Medusa. BruteSpray can even find non-standard ports by using the -sV inside Nmap.","category":"Bruteforce"},{"owner":"A1S0N","code":"$ apt update \u0026\u0026 apt upgrade \n$ apt install git \n$ apt install python3 \n$ apt install python \n$ git clone https://github.com/UndeadSec/checkURL.git \n$ cd checkURL \n$ chmod +x * ","use":"Run: \n$ python3 checkURL.py --url [attackerurl] \n\nUsage: \npython3 checkURL.py --help \n\nusage: checkURL.py [-h] [--url URL | --url-list URL_list] [--check-url] \n\nCheck IDN Homograph Attack - UndeadSec \n\noptional arguments: \n  -h, --help show this help message and exit \n  --url URL Enter to check if it is Evil URL \n  --url-list URL_list Specify a file with a list of Evil URL \n  --check-url Check socket URL \n\nExamples: \n• python3 checkURL.py --url google.com \n• python3 checkURL.py --url google.com --check-url \n• python3 checkURL.py --url-list urls.txt \n• python3 checkURL.py --url-list urls.txt --check-url","name":"Check URL","link":"https://github.com/UndeadSec/checkURL","disc":"Detect evil urls that uses IDN Homograph Attack.","category":"Bruteforce"},{"owner":"D4Vinci","code":"$ apt update \u0026\u0026 apt upgrade \n$ apt install git \n$ apt install python2 \n$ apt install python \n$ git clone https://github.com/D4Vinci/Clickjacking-Tester.git \n$ cd Clickjacking-Tester \n$ chmod +x * \n\nNow create file.txt file here and paste victim websites in this file.","use":"Run: \npython clickjacking_tester.py sites.txt","name":"Clickjacking","link":"https://github.com/D4Vinci/Clickjacking-Tester","disc":"A python script designed to check if the website is vulnerable of clickjacking and creates a poc.","category":"Vulnerability"},{"owner":"hatRiot","code":"$ apt update \n$ apt upgrade \n$ apt install git \napt install python2 \n$ git clone https://github.com/hatRiot/zarp","use":"$ cd zarp \nchmod +x zarp.py \nsudo python2 zarp.py","name":"Zarp Network Rool","link":"https://github.com/hatRiot/zarp","disc":"Zarp is a network attack tool centered around the exploitation of local networks. This does not include system exploitation, but rather abusing networking protocols and stacks to take over, infiltrate, and knock out. Sessions can be managed to quickly poison and sniff multiple systems at once, dumping sensitive information automatically or to the attacker directly. Various sniffers are included to automatically parse usernames and passwords from various protocols, as well as view HTTP traffic and more. DoS attacks are included to knock out various systems and applications. These tools open up the possibility for very complex attack scenarios on live networks quickly, cleanly, and quietly.","category":"Exploitation"},{"owner":"m4ll0k","code":"$ apt update \n$ apt upgrade \n$ apt install git \n$ apt install python \n$ git clone https://github.com/m4110k/WPSeku \n$ cd WPSeku \n$ chmod +x * \n$ pip install -r requirements.txt","use":"python wpseku.py \n\n• Generic Scan \npython3 wpseku.py --url https://www.xxxxxxx.com --verbose \n• Bruteforce Login \npython3 wpseku.py --url https://www.xxxxxxx.com --brute --user test --wordlist wl.txt --verbose \n• Scan plugin,theme and wordpress code \npython3 wpseku.py --scan --verbose","name":"WPSeku Tool","link":"https://github.com/m4ll0k/WPSeku","disc":"WPSeku is a black box WordPress vulnerability scanner that can be used to scan remote WordPress installations to find security issues.","category":"Vulnerability"},{"owner":"erwanlr","code":"$ apt install git \n$ apt install ruby \n$ git clone https://github.com/wpscanteam/wpscan \n$ cd wpscan \n$ chmod 777 wpscan.rb \ninstall some gems one by one \n$ gem install bundle \n$ bundle install -j5","use":"$ ruby wpscan.rb \n$ ruby wpscan.rb –url [wordpress url]","name":"WLScan Tool (WordPress Sacn)","link":"https://github.com/wpscanteam/wpscan","disc":"WPScan is a free, for non-commercial use, black box WordPress vulnerability scanner written for security professionals and blog maintainers to test the security of their sites.","category":"Vulnerability"}]
